Design code
module up_down_counter (
    input wire clk,
    input wire reset,
    input wire up_down, // 1 = up, 0 = down
    output reg [3:0] count
);
    always @(posedge clk or posedge reset) begin
        if (reset)
            count <= 0;
        else if (up_down)
            count <= count + 1;
        else
            count <= count - 1;
    end
endmodule

Testbench
module tb_up_down_counter;
    reg clk, reset, up_down;
    wire [3:0] count;

    up_down_counter uut (.clk(clk), .reset(reset), .up_down(up_down), .count(count));

    initial begin
        clk = 0;
        forever #5 clk = ~clk; // Clock with 10 time units period
    end

    initial begin
        $display("Time rst up_down | count");
        $monitor("%g    %b     %b     | %b", $time, reset, up_down, count);

        reset = 1; up_down = 1; #10;
        reset = 0;

        // Count up
        #50;

        // Count down
        up_down = 0;
        #50;

        $finish;
    end
endmodule
